name: Deploy to Vercel

on:
  push:
    branches: [main, master, v3]
    paths: 
      - '.next-cache/**'
      - 'src/**'
      - 'public/**'
      - 'package.json'
      - 'next.config.mjs'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
      
      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: üîß Install dependencies
        run: npm ci
      
      - name: üì• Install Vercel CLI
        run: npm install -g vercel@latest
      
      - name: üîç Verify cache and configuration
        run: |
          echo "Checking cache directory..."
          if [ ! -d ".next-cache" ]; then
            echo "‚ùå .next-cache directory not found!"
            exit 1
          fi
          
          JSON_COUNT=$(find .next-cache -name "*.json" | wc -l)
          echo "‚úÖ Cache directory found with $JSON_COUNT JSON files"
          
          echo "Checking Vercel configuration..."
          if [ -z "$VERCEL_TOKEN" ]; then
            echo "‚ùå VERCEL_TOKEN secret not configured!"
            exit 1
          fi
          
          if [ -z "$VERCEL_ORG_ID" ]; then
            echo "‚ùå VERCEL_ORG_ID secret not configured!"
            exit 1
          fi
          
          if [ -z "$VERCEL_PROJECT_ID" ]; then
            echo "‚ùå VERCEL_PROJECT_ID secret not configured!"
            exit 1
          fi
          
          echo "‚úÖ All secrets configured"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      
      - name: üèóÔ∏è Build Next.js application
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: 1
      
      - name: üìä Show build statistics
        run: |
          echo "üìä Build Statistics:"
          echo "Cache files: $(find .next-cache -name "*.json" | wc -l)"
          echo "Public API files: $(find public/api -name "*.json" 2>/dev/null | wc -l || echo 0)"
          if [ -d ".next" ]; then
            echo "Build size: $(du -sh .next 2>/dev/null || echo "N/A")"
          fi
      
      - name: üöÄ Deploy to Vercel
        run: |
          echo "üöÄ Starting Vercel deployment..."
          
          # Set environment variables for Vercel
          export VERCEL_ORG_ID="${{ secrets.VERCEL_ORG_ID }}"
          export VERCEL_PROJECT_ID="${{ secrets.VERCEL_PROJECT_ID }}"
          
          # Deploy to production
          DEPLOYMENT_URL=$(vercel deploy --prod --token="${{ secrets.VERCEL_TOKEN }}" 2>&1)
          
          echo "Deployment output:"
          echo "$DEPLOYMENT_URL"
          
          # Check if deployment was successful
          if echo "$DEPLOYMENT_URL" | grep -q "https://"; then
            echo "‚úÖ Deployment successful!"
            echo "üåê URL: $(echo "$DEPLOYMENT_URL" | grep -o 'https://[^[:space:]]*' | head -1)"
          else
            echo "‚ùå Deployment failed!"
            echo "$DEPLOYMENT_URL"
            exit 1
          fi
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      
      - name: üìù Deployment Summary
        if: success()
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "üì¶ Static cache deployed with processed Excel data"
          echo "‚ö° Fast load times with pre-processed JSON files"
          echo "üîç Check your Vercel dashboard for full deployment details"